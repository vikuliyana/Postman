{
	"info": {
		"_postman_id": "6ca5e39a-02bf-4b37-9847-96a8aa3b3744",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19941630"
	},
	"item": [
		{
			"name": "N1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"// 3. Проверить, что в body приходит правильный string.\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "N2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"// 3. Спарсить response body в json.\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"// 7. Спарсить request.\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var respData = pm.response.json();\r",
							"var respName = respData.name;\r",
							"var respAge = +respData.age;\r",
							"var respSalary = respData.salary;\r",
							"var respFamily = respData.family\r",
							"var respSalary_1_5_year = +respData.family.u_salary_1_5_year\r",
							"\r",
							"var reqData = request.data;\r",
							"var reqName = reqData.name;\r",
							"var reqAge = +reqData.age;\r",
							"var reqSalary = +reqData.salary;\r",
							"\r",
							"// console.log(respName);\r",
							"// console.log(respAge);\r",
							"// console.log(respSalary);\r",
							"console.log(\"family =\", respFamily)\r",
							"\r",
							"// console.log(reqName);\r",
							"// console.log(reqAge);\r",
							"// console.log(reqSalary);\r",
							"\r",
							"pm.test(\"Name check\", function () {\r",
							"  pm.expect(respName).to.eql('Vika');  \r",
							"});\r",
							"pm.test(\"Age check\", function () {\r",
							"  pm.expect(respAge).to.eql(23);  \r",
							"});\r",
							"pm.test(\"Salary check\", function () {\r",
							"  pm.expect(respSalary).to.eql(2000);  \r",
							"});\r",
							"\r",
							"pm.test(\"Name check with reqData\", function () {\r",
							"  pm.expect(respName).to.eql(reqName);  \r",
							"});\r",
							"pm.test(\"Age check with reqData\", function () {\r",
							"  pm.expect(respAge).to.eql(reqAge);  \r",
							"});\r",
							"pm.test(\"Salary check with reqData\", function () {\r",
							"  pm.expect(respSalary).to.eql(reqSalary);  \r",
							"});\r",
							"pm.test(\"Salary 1.5 year check with reqData\", function () {\r",
							"  pm.expect(respSalary_1_5_year).to.eql(reqSalary * 4);  \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vika",
							"type": "text"
						},
						{
							"key": "age",
							"value": "23",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "N3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"// 3. Спарсить response body в json.\r",
							"// 4. Спарсить request.\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"// 12. Проверить, что параметр age имеет значение 4\r",
							"\r",
							"var respData = pm.response.json();\r",
							"var respName = respData.name;\r",
							"var respAge = +respData.age;\r",
							"var respSalary = +respData.salary;\r",
							"var respFamily = respData.family;\r",
							"var respDog = respData.family.pets.dog;\r",
							"var respDogName = respData.family.pets.dog.name;\r",
							"var respDogAge = +respData.family.pets.dog.age;\r",
							"\r",
							"console.log(\"family =\", respFamily);\r",
							"\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"var reqName = reqData.name\r",
							"var reqAge = +reqData.age;\r",
							"var reqSalary = +reqData.salary;\r",
							"\r",
							"pm.test(\"Name check\", function () {\r",
							"    pm.expect(respName).to.eql(reqName);\r",
							"});\r",
							"pm.test(\"Age check\", function () {\r",
							"  pm.expect(respAge).to.eql(reqAge);  \r",
							"});\r",
							"pm.test(\"Salary check\", function () {\r",
							"  pm.expect(respSalary).to.eql(reqSalary);  \r",
							"});\r",
							"pm.test(\"Parameter Dog has parameter Name\", function () {\r",
							"    pm.expect(respDog).to.have.property('name');\r",
							" });\r",
							"pm.test(\"Parameter Dog has parameter Age\", function () {\r",
							"    pm.expect(respDog).to.have.property('age');\r",
							" });\r",
							"pm.test(\"Dog name check\", function () {\r",
							"  pm.expect(respDogName).to.eql('Luky');  \r",
							"});\r",
							"pm.test(\"Dog age check\", function () {\r",
							"  pm.expect(respDogAge).to.eql(4);  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Vika&age=23&salary=2000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Vika"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "N4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"// 3. Спарсить response body в json.\r",
							"// 4. Спарсить request.\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"// 15. Создать в окружении переменную name\r",
							"// 16. Создать в окружении переменную age\r",
							"// 17. Создать в окружении переменную salary\r",
							"// 18. Передать в окружение переменную name\r",
							"// 19. Передать в окружение переменную age\r",
							"// 20. Передать в окружение переменную salary\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var respData = pm.response.json();\r",
							"var respName = respData.name;\r",
							"var respAge = +respData.age;\r",
							"var respSalary = respData.salary;\r",
							"\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"var reqName = reqData.name;\r",
							"var reqAge = +reqData.age;\r",
							"var reqSalary = +reqData.salary;\r",
							"\r",
							"pm.environment.set(\"age\", reqAge);\r",
							"pm.environment.set(\"name\", reqName);\r",
							"pm.environment.set(\"salary\", reqSalary);\r",
							"\r",
							"console.log(reqSalary);\r",
							"console.log(respSalary);\r",
							"console.log(respSalary[0]);\r",
							"console.log(respSalary[1]);\r",
							"console.log(respSalary[2]);\r",
							"\r",
							"for (let i = 0; i < respSalary.length; i++) {\r",
							"\tconsole.log(respSalary[i]);\r",
							"}\r",
							"\r",
							"pm.test(\"Name check\", function () {\r",
							"    pm.expect(respName).to.eql(reqName);\r",
							"});\r",
							"pm.test(\"Age check\", function () {\r",
							"    pm.expect(respAge).to.eql(reqAge);\r",
							"});\r",
							"pm.test(\"Salary check for 1st element\", function () {\r",
							"    pm.expect(respSalary[0]).to.eql(reqSalary);\r",
							"});\r",
							"pm.test(\"Salary check for 2nd element\", function () {\r",
							"    pm.expect(+respSalary[1]).to.eql(reqSalary*2);\r",
							"});\r",
							"pm.test(\"Salary check for 3rd element\", function () {\r",
							"    pm.expect(+respSalary[2]).to.eql(reqSalary*3);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Vika&age=23&salary=2000",
					"host": [
						"{{url}}"
					],
					"path": [
						"",
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Vika"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "N5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"// 6. Спарсить response body в json.\r",
							"// 7. Спарсить request.\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"\r",
							"var reqData = request.data;\r",
							"var reqSalary = +reqData.salary;\r",
							"var reqAge = +reqData.age;\r",
							"\r",
							"var respData = pm.response.json();\r",
							"var respAge = respData.person.u_age;\r",
							"var respPerson = respData.person;\r",
							"var respSalary = respData.person.u_name[1];\r",
							"var respStartSalary = respData.start_qa_salary;\r",
							"var respSalary_after_6_months = respData.qa_salary_after_6_months;\r",
							"var respSalary_after_12_months = respData.qa_salary_after_12_months;\r",
							"var respSalary_after_1_5_year = respData[\"qa_salary_after_1.5_year\"];\r",
							"var respSalary_after_3_5_years = respData[\"qa_salary_after_3.5_years\"];\r",
							"var respSalary_after_5_years = respData.person.u_salary_5_years;\r",
							"\r",
							"pm.test(\"Respose data has parameter person\", function () {\r",
							"    pm.expect(respData).to.have.property('person');\r",
							" });\r",
							"pm.test(\"Respose data has parameter qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(respData).to.have.property('qa_salary_after_1.5_year');\r",
							" });\r",
							"pm.test(\"Respose data has parameter qa_salary_after_12_months\", function () {\r",
							"    pm.expect(respData).to.have.property('qa_salary_after_12_months');\r",
							" });\r",
							"pm.test(\"Respose data has parameter qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(respData).to.have.property('qa_salary_after_3.5_years');\r",
							" });\r",
							"pm.test(\"Respose data has parameter qa_salary_after_6_months\", function () {\r",
							"    pm.expect(respData).to.have.property('qa_salary_after_6_months');\r",
							" });\r",
							"pm.test(\"Respose data has parameter start_qa_salary\", function () {\r",
							"    pm.expect(respData).to.have.property('start_qa_salary');\r",
							" });\r",
							"pm.test(\"Check parameter start_qa_salary\", function () {\r",
							"    pm.expect(respStartSalary).to.eql(reqSalary);\r",
							"});\r",
							"pm.test(\"Check parameter qa_salary_after_6_months\", function () {\r",
							"    pm.expect(respSalary_after_6_months).to.eql(reqSalary*2);\r",
							"});\r",
							"pm.test(\"Check parameter qa_salary_after_12_months\", function () {\r",
							"    pm.expect(respSalary_after_12_months).to.eql(reqSalary*2.7);\r",
							"});\r",
							"pm.test(\"Check parameter qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(respSalary_after_1_5_year).to.eql(reqSalary*3.3);\r",
							"});\r",
							"pm.test(\"Check parameter qa_salary_after_3.5_year\", function () {\r",
							"    pm.expect(respSalary_after_3_5_years).to.eql(reqSalary*3.8);\r",
							"});\r",
							"pm.test(\"Check parameter person\", function () {\r",
							"    pm.expect(respSalary).to.eql(reqSalary);\r",
							"});\r",
							"pm.test(\"Check parameter person\", function () {\r",
							"    pm.expect(respAge).to.eql(reqAge);\r",
							"});\r",
							"pm.test(\"Check parameter u_salary_5_years\", function () {\r",
							"    pm.expect(respSalary_after_5_years).to.eql(reqSalary*4.2);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://162.55.220.72:5005",
			"type": "string"
		}
	]
}